'use client'

import { motion } from 'framer-motion'
import { X } from 'lucide-react'

interface SkillTooltipProps {
  type: 'skills' | 'education' | 'characteristics' | 'personalInfo' | 'workExperience' | 'achievements' | 'smartContracts'
  index: number
  position: { x: number; y: number }
  data: {
    skills: string[]
    education: string[]
    characteristics: string[]
    personalInfo: string[]
    workExperience: string[]
    achievements: string[]
    smartContracts: string[]
  }
}

export default function SkillTooltip({ type, index, position, data }: SkillTooltipProps) {
  const getTypeInfo = () => {
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–ª—É—á–∞–∏ –¥–ª—è –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    if (index === -1) {
      switch (type) {
        case 'skills':
          return {
            title: '–§–æ—Å—Ñ–∞—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞',
            color: '#ff6b6b',
            icon: 'üß™',
            description: '–û–ø—Ü–∏—è –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ - —ç—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –î–ù–ö'
          }
        case 'education':
          return {
            title: '–°–∞—Ö–∞—Ä–Ω–∞—è –≥—Ä—É–ø–ø–∞',
            color: '#4ecdc4',
            icon: 'üç¨',
            description: '–û–ø—Ü–∏—è –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ - —ç—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –î–ù–ö'
          }
        case 'characteristics':
          return {
            title: '–í–æ–¥–æ—Ä–æ–¥–Ω–∞—è —Å–≤—è–∑—å',
            color: '#fbbf24',
            icon: 'üîó',
            description: '–û–ø—Ü–∏—è –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ - —ç—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –î–ù–ö'
          }
      }
    }

    // –û–±—ã—á–Ω—ã–µ —Å–ª—É—á–∞–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    switch (type) {
      case 'skills':
        return {
          title: '–ù–∞–≤—ã–∫',
          color: '#3b82f6',
          icon: 'üíº',
          description: '–í–∞—à –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –Ω–∞–≤—ã–∫'
        }
      case 'education':
        return {
          title: '–û–±—É—á–µ–Ω–∏–µ',
          color: '#10b981',
          icon: 'üéì',
          description: '–í–∞—à–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏–ª–∏ –∫—É—Ä—Å'
        }
      case 'characteristics':
        return {
          title: '–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞',
          color: '#8b5cf6',
          icon: '‚≠ê',
          description: '–í–∞—à–∞ –ª–∏—á–Ω–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞'
        }
      case 'personalInfo':
        return {
          title: '–õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
          color: '#ef4444',
          icon: 'üë§',
          description: '–í–∞—à–∞ –ª–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'
        }
      case 'workExperience':
        return {
          title: '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã',
          color: '#14b8a6',
          icon: 'üíº',
          description: '–í–∞—à –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã'
        }
      case 'achievements':
        return {
          title: '–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ',
          color: '#eab308',
          icon: 'üèÜ',
          description: '–í–∞—à–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ'
        }
      case 'smartContracts':
        return {
          title: '–°–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç',
          color: '#f97316',
          icon: 'üìú',
          description: '–í–∞—à —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç'
        }
    }
  }

  const typeInfo = getTypeInfo()
  
  // –î–ª—è –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (index === -1) –≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
  if (index === -1) {
    return (
      <motion.div
        initial={{ opacity: 0, scale: 0.8, y: 10 }}
        animate={{ opacity: 1, scale: 1, y: 0 }}
        exit={{ opacity: 0, scale: 0.8, y: 10 }}
        transition={{ duration: 0.2 }}
        className="fixed z-50 pointer-events-none"
        style={{
          left: Math.min(Math.max(position.x - 100, 10), window.innerWidth - 220),
          top: Math.max(position.y - 120, 10),
        } as React.CSSProperties}
      >
        <div className="glass-dark rounded-lg p-4 max-w-xs border border-slate-600">
          {/* Header */}
          <div className="flex items-center space-x-2 mb-2">
            <span className="text-lg">{typeInfo.icon}</span>
            <div 
              className="w-3 h-3 rounded-full"
              style={{ backgroundColor: typeInfo.color }}
            />
            <span className="text-sm font-medium text-white">
              {typeInfo.title}
            </span>
          </div>

          {/* Content */}
          <div className="text-sm text-gray-300 mb-2">
            {typeInfo.description}
          </div>

          {/* Arrow */}
          <div 
            className="absolute top-full left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent"
            style={{ borderTopColor: '#1e293b' }}
          />
        </div>
      </motion.div>
    )
  }
  
  // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±—ã—á–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  if (!data || !data[type] || !data[type][index]) {
    return null
  }
  
  const item = data[type][index]

  return (
    <motion.div
      initial={{ opacity: 0, scale: 0.8, y: 10 }}
      animate={{ opacity: 1, scale: 1, y: 0 }}
      exit={{ opacity: 0, scale: 0.8, y: 10 }}
      transition={{ duration: 0.2 }}
      className="fixed z-50 pointer-events-none"
      style={{
        left: Math.min(Math.max(position.x - 100, 10), window.innerWidth - 220),
        top: Math.max(position.y - 120, 10),
      } as React.CSSProperties}
    >
      <div className="glass-dark rounded-lg p-4 max-w-xs border border-slate-600">
        {/* Header */}
        <div className="flex items-center space-x-2 mb-2">
          <span className="text-lg">{typeInfo.icon}</span>
          <div 
            className="w-3 h-3 rounded-full"
            style={{ backgroundColor: typeInfo.color }}
          />
          <span className="text-sm font-medium text-white">
            {typeInfo.title}
          </span>
        </div>

        {/* Content */}
        <div className="text-sm text-gray-300 mb-2">
          {item}
        </div>

        {/* Footer */}
        <div className="text-xs text-gray-500">
          –°–µ–≥–º–µ–Ω—Ç {index + 1} –∏–∑ {data[type].length}
        </div>

        {/* Arrow */}
        <div 
          className="absolute top-full left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent"
          style={{ borderTopColor: '#1e293b' }}
        />
      </div>
    </motion.div>
  )
}
